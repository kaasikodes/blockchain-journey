/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../common";
import type { Bank, BankInterface } from "../../reentrancy/Bank";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "createAccount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccountBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBankBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052604051610867380380610867833981810160405281019061002591906100c2565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100ef565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061008f82610064565b9050919050565b61009f81610084565b81146100aa57600080fd5b50565b6000815190506100bc81610096565b92915050565b6000602082840312156100d8576100d761005f565b5b60006100e6848285016100ad565b91505092915050565b6080516107566101116000396000818161015d01526102d501526107566000f3fe6080604052600436106100705760003560e01c80636896fabf1161004e5780636896fabf146100e25780638da5cb5b1461010d5780639dca362f14610138578063d0e30db01461014257610070565b806338a2ca40146100755780633ccfd60b146100a0578063636bfbab146100b7575b600080fd5b34801561008157600080fd5b5061008a610159565b6040516100979190610476565b60405180910390f35b3480156100ac57600080fd5b506100b56101ef565b005b3480156100c357600080fd5b506100cc6101f1565b6040516100d99190610476565b60405180910390f35b3480156100ee57600080fd5b506100f76101fc565b6040516101049190610476565b60405180910390f35b34801561011957600080fd5b506101226102d3565b60405161012f91906104d2565b60405180910390f35b6101406102f7565b005b34801561014e57600080fd5b5061015761045b565b005b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e090610570565b60405180910390fd5b47905090565b565b662386f26fc1000081565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1661028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028390610602565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b662386f26fc10000341015610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033890610694565b60405180910390fd5b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610700565b60405180910390fd5b6040518060400160405280348152602001600115158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908315150217905550905050565b565b6000819050919050565b6104708161045d565b82525050565b600060208201905061048b6000830184610467565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104bc82610491565b9050919050565b6104cc816104b1565b82525050565b60006020820190506104e760008301846104c3565b92915050565b600082825260208201905092915050565b7f4f6e6c79204f776e65722063616e2061636365737320746f74616c2062616e6b60008201527f2062616c616e6365000000000000000000000000000000000000000000000000602082015250565b600061055a6028836104ed565b9150610565826104fe565b604082019050919050565b600060208201905081810360008301526105898161054d565b9050919050565b7f54686973206164647265737320646f6573206e6f74206861766520616e20616360008201527f636f756e74000000000000000000000000000000000000000000000000000000602082015250565b60006105ec6025836104ed565b91506105f782610590565b604082019050919050565b6000602082019050818103600083015261061b816105df565b9050919050565b7f54686520616d6f756e74206973206c657373207468616e20746865206d696d6960008201527f6e6d756d206465706f7369740000000000000000000000000000000000000000602082015250565b600061067e602c836104ed565b915061068982610622565b604082019050919050565b600060208201905081810360008301526106ad81610671565b9050919050565b7f54686973204163636f756e7420616c7265616479206578697374730000000000600082015250565b60006106ea601b836104ed565b91506106f5826106b4565b602082019050919050565b60006020820190508181036000830152610719816106dd565b905091905056fea264697066735822122036715a93e41ec5b326818dd209ffc46b5496f6f6501224bfaac09fa9bddb9d1264736f6c63430008120033";

type BankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bank__factory extends ContractFactory {
  constructor(...args: BankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      Bank & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Bank__factory {
    return super.connect(runner) as Bank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new Interface(_abi) as BankInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Bank {
    return new Contract(address, _abi, runner) as unknown as Bank;
  }
}
